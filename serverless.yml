service: nexp-backend

custom:
  stage: ${opt:stage, env:STAGE, "dev"}
  region: us-west-2

  prune:
    automatic: true
    number: 10

  pythonRequirements:
    dockerizePip: true
    layer: true
    useDownloadCache: false
    useStaticCache: false

  config:
    bucket: usdr.${self:custom.stage}.healthworkconnect
    deploys: usdr.deploy-artifacts

provider:
  name: aws
  runtime: python3.8

  logRetentionInDays: 14

  deploymentBucket:
    name: ${self:custom.config.deploys}
    blockPublicAccess: true

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: DataBucket
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: DataBucket
            - "/*"

  environment:
    S3_BUCKET: ${self:custom.config.bucket}
    S3_PREFIX: la
    AIRTABLE_BASE_ID: ${ssm:/nexp/${self:custom.stage}/airtable/base-id~true}
    AIRTABLE_API_KEY: ${ssm:/nexp/${self:custom.stage}/airtable/api-key~true}
    SENDGRID_API_KEY: ${ssm:/nexp/shared/sendgrid/api-key~true}
    GOOGLE_CREDENTIALS: ${ssm:/nexp/shared/google/credentials~true}
    GOOGLE_CANDIDATES_SHEET_NAME: ${ssm:/nexp/${self:custom.stage}/google/sheets/candidates/name~true}
    GOOGLE_FACILITIES_SHEET_NAME: ${ssm:/nexp/${self:custom.stage}/google/sheets/facilities/name~true}
    GOOGLE_NEEDS_SHEET_NAME: ${ssm:/nexp/${self:custom.stage}/google/sheets/needs/name~true}
    GOOGLE_TRACKING_SHEET_NAME: ${ssm:/nexp/${self:custom.stage}/google/sheets/tracking/name~true}

package:
  excludeDevDependencies: true
  exclude:
    - ".pytest_cache/**"
    - "node_modules/**"
    - ".vscode/**"
    - ".serverless/**"
    - "infra/**"

layers:
  sqlite:
    path: layer

functions:
  send-candidate-lists:
    name: nexp-${self:custom.stage}-send-candidate-lists
    handler: handlers.send_candidates_lists
    events:
      - schedule: cron(0 13 ? * MON-FRI *) # 8am CST Monday through Friday
    timeout: 900
    package:
      exclude:
        - "layer/**"
        - ".pytest_cache/**"
        - "node_modules/**"
        - ".vscode/**"
        - ".serverless/**"
        - "infra/**"
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
      - { Ref: SqliteLambdaLayer }

  send-needs-requests:
    name: nexp-${self:custom.stage}-send-needs-requests
    handler: handlers.send_needs_requests
    events:
      - schedule: cron(0 17 ? * MON *) # Noon Monday
      - schedule: cron(0 17 ? * WED *) # Noon Wednesday
      - schedule: cron(0 17 ? * FRI *) # Noon Friday
    timeout: 900
    package:
      exclude:
        - "layer/**"
        - ".pytest_cache/**"
        - "node_modules/**"
        - ".vscode/**"
        - ".serverless/**"
        - "infra/**"
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
      - { Ref: SqliteLambdaLayer }

  update-sheets:
    name: nexp-${self:custom.stage}-update-sheets
    handler: handlers.update_sheets
    events:
      - schedule: rate(1 hour)
    timeout: 900
    package:
      exclude:
        - "layer/**"
        - ".pytest_cache/**"
        - "node_modules/**"
        - ".vscode/**"
        - ".serverless/**"
        - "infra/**"
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
      - { Ref: SqliteLambdaLayer }

resources:
  Resources:
    DataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.config.bucket}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ["*"]
              AllowedMethods: [GET]
              AllowedOrigins: ["*"]
              Id: AllowGet
              MaxAge: "3600"

plugins:
  - serverless-python-requirements
  - serverless-prune-plugin
